import React, { useState } from 'react';
import { useNavigate } from 'react-router-dom';

const API_BASE_URL = 'http://localhost:5000/api';

const CreatePost = () => {
    const navigate = useNavigate();
    const [formData, setFormData] = useState({
        topic: '',
        mood: 'happy',
        image_url: ''
    });
    const [loading, setLoading] = useState(false);
    const [error, setError] = useState('');

    const moods = ['happy', 'sad', 'excited', 'calm', 'angry'];

    const handleChange = (e) => {
        setFormData({
            ...formData,
            [e.target.name]: e.target.value
        });
    };

    const handleSubmit = async (e) => {
        e.preventDefault();
        setError('');
        setLoading(true);

        try {
            const token = localStorage.getItem('token');
            const response = await fetch(`${API_BASE_URL}/posts`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Authorization': `Bearer ${token}`
                },
                body: JSON.stringify(formData)
            });

            const data = await response.json();

            if (!response.ok) {
                throw new Error(data.message || 'Failed to create post');
            }

            navigate(`/posts/${data.id}`);
        } catch (error) {
            setError(error.message);
        } finally {
            setLoading(false);
        }
    };

    return (
        <div className="create-post">
            <h2>Create New Post</h2>

            {error && <div className="error">{error}</div>}

            <form onSubmit={handleSubmit}>
                <div className="form-group">
                    <label htmlFor="topic">Topic:</label>
                    <input
                        type="text"
                        id="topic"
                        name="topic"
                        value={formData.topic}
                        onChange={handleChange}
                        placeholder="What's your post about?"
                        required
                    />
                </div>

                <div className="form-group">
                    <label htmlFor="mood">Mood:</label>
                    <select
                        id="mood"
                        name="mood"
                        value={formData.mood}
                        onChange={handleChange}
                        required
                    >
                        {moods.map(mood => (
                            <option key={mood} value={mood}>
                                {mood.charAt(0).toUpperCase() + mood.slice(1)}
                            </option>
                        ))}
                    </select>
                </div>

                <div className="form-group">
                    <label htmlFor="image_url">Image URL (optional):</label>
                    <input
                        type="url"
                        id="image_url"
                        name="image_url"
                        value={formData.image_url}
                        onChange={handleChange}
                        placeholder="https://example.com/image.jpg"
                    />
                </div>

                <div className="form-group">
                    <small>
                        <strong>Note:</strong> The post content will be automatically generated by AI based on your topic and mood!
                    </small>
                </div>

                <button type="submit" className="btn" disabled={loading}>
                    {loading ? 'Creating Post...' : 'Create Post'}
                </button>
            </form>
        </div>
    );
};

export default CreatePost;